/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.tokenservice.model;

/**
 * Response of exchanging a token.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Token Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExchangeTokenResponse extends com.google.api.client.json.GenericJson {

    /**
     * The granted access token. The value may be {@code null}.
     */
    @com.google.api.client.util.Key("access_token")
    private java.lang.String accessToken;

    /**
     * Expiration time of access_token in seconds. The value may be {@code null}.
     */
    @com.google.api.client.util.Key("expires_in")
    @com.google.api.client.json.JsonString
    private java.lang.Long expiresIn;

    /**
     * The granted refresh token; might be the same as refresh_token in the request. The value may
     * be {@code null}.
     */
    @com.google.api.client.util.Key("refresh_token")
    private java.lang.String refreshToken;

    /**
     * The type of access_token. Included to conform with the OAuth 2.0 specification; always
     * Bearer. The value may be {@code null}.
     */
    @com.google.api.client.util.Key("token_type")
    private java.lang.String tokenType;

    /**
     * The granted access token.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getAccessToken() {
        return accessToken;
    }

    /**
     * The granted access token.
     *
     * @param accessToken accessToken or {@code null} for none
     */
    public ExchangeTokenResponse setAccessToken(java.lang.String accessToken) {
        this.accessToken = accessToken;
        return this;
    }

    /**
     * Expiration time of access_token in seconds.
     *
     * @return value or {@code null} for none
     */
    public java.lang.Long getExpiresIn() {
        return expiresIn;
    }

    /**
     * Expiration time of access_token in seconds.
     *
     * @param expiresIn expiresIn or {@code null} for none
     */
    public ExchangeTokenResponse setExpiresIn(java.lang.Long expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }

    /**
     * The granted refresh token; might be the same as refresh_token in the request.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getRefreshToken() {
        return refreshToken;
    }

    /**
     * The granted refresh token; might be the same as refresh_token in the request.
     *
     * @param refreshToken refreshToken or {@code null} for none
     */
    public ExchangeTokenResponse setRefreshToken(java.lang.String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    /**
     * The type of access_token. Included to conform with the OAuth 2.0 specification; always
     * Bearer.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getTokenType() {
        return tokenType;
    }

    /**
     * The type of access_token. Included to conform with the OAuth 2.0 specification; always
     * Bearer.
     *
     * @param tokenType tokenType or {@code null} for none
     */
    public ExchangeTokenResponse setTokenType(java.lang.String tokenType) {
        this.tokenType = tokenType;
        return this;
    }

    @Override
    public ExchangeTokenResponse set(String fieldName, Object value) {
        return (ExchangeTokenResponse) super.set(fieldName, value);
    }

    @Override
    public ExchangeTokenResponse clone() {
        return (ExchangeTokenResponse) super.clone();
    }

}
