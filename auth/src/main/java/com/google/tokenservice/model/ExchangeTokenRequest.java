/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * Modify at your own risk.
 */

package com.google.tokenservice.model;

/**
 * Request for exchanging token.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Token Service API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ExchangeTokenRequest extends com.google.api.client.json.GenericJson {

    /**
     * ID token to exchange for an access token and a refresh token. This field is called code to
     * conform with the OAuth 2.0 specification. This field is ignored if grant_type isn't
     * authorization_code. The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String code;

    /**
     * The type of token you're sending:
     *
     * authorization_code to send an ID token. refresh_token to send a refresh token. The value may
     * be {@code null}.
     */
    @com.google.api.client.util.Key("grant_type")
    private java.lang.String grantType;

    /**
     * Refresh token to exchange for an access token. This field is ignored if grant_type isn't
     * refresh_token. The value may be {@code null}.
     */
    @com.google.api.client.util.Key("refresh_token")
    private java.lang.String refreshToken;

    /**
     * ID token to exchange for an access token and a refresh token. This field is called code to
     * conform with the OAuth 2.0 specification. This field is ignored if grant_type isn't
     * authorization_code.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getCode() {
        return code;
    }

    /**
     * ID token to exchange for an access token and a refresh token. This field is called code to
     * conform with the OAuth 2.0 specification. This field is ignored if grant_type isn't
     * authorization_code.
     *
     * @param code code or {@code null} for none
     */
    public ExchangeTokenRequest setCode(java.lang.String code) {
        this.code = code;
        return this;
    }

    /**
     * The type of token you're sending:
     *
     * authorization_code to send an ID token. refresh_token to send a refresh token.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getGrantType() {
        return grantType;
    }

    /**
     * The type of token you're sending:
     *
     * authorization_code to send an ID token. refresh_token to send a refresh token.
     *
     * @param grantType grantType or {@code null} for none
     */
    public ExchangeTokenRequest setGrantType(java.lang.String grantType) {
        this.grantType = grantType;
        return this;
    }

    /**
     * Refresh token to exchange for an access token. This field is ignored if grant_type isn't
     * refresh_token.
     *
     * @return value or {@code null} for none
     */
    public java.lang.String getRefreshToken() {
        return refreshToken;
    }

    /**
     * Refresh token to exchange for an access token. This field is ignored if grant_type isn't
     * refresh_token.
     *
     * @param refreshToken refreshToken or {@code null} for none
     */
    public ExchangeTokenRequest setRefreshToken(java.lang.String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }

    @Override
    public ExchangeTokenRequest set(String fieldName, Object value) {
        return (ExchangeTokenRequest) super.set(fieldName, value);
    }

    @Override
    public ExchangeTokenRequest clone() {
        return (ExchangeTokenRequest) super.clone();
    }

}
