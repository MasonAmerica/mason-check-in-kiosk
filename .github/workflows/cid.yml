name: CI/CD

on: [push, pull_request]
env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch tags and history
        run: |
          git fetch --depth=1 --progress origin +refs/tags/*:refs/tags/*
          git fetch --prune --unshallow --progress
      - name: Install JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Gradle Cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-v2-gradle-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-v2-gradle-
      - name: Validate Gradle integrity
        uses: gradle/wrapper-validation-action@v1
      - name: Build debug project
        run: ./gradlew assembleDebug -S
        if: github.ref != 'refs/heads/master'
      - name: Build release project
        run: ./gradlew assembleRelease -S
        if: github.ref == 'refs/heads/master'
      - name: Upload outputs
        uses: actions/upload-artifact@v1
        with:
          name: outputs
          path: app/build/outputs/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-v2-gradle-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-v2-gradle-
      - name: Run tests
        run: ./gradlew check test lint -S

  deploy_mason:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      MASON_API_KEY: ${{ secrets.MASON_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Fetch tags
        run: git fetch --depth=1 --progress origin +refs/tags/*:refs/tags/*
      - name: Download outputs
        uses: actions/download-artifact@v1
        with:
          name: outputs
          path: app/build/outputs
      - name: Prep CLI
        run: |
          curl -Lo mason https://github.com/MasonAmerica/mason-cli/releases/download/1.5/mason-linux
          chmod +x mason
          ./mason login -u $MASON_USERNAME -p $MASON_PASSWORD
        env:
          MASON_USERNAME: ${{ secrets.MASON_USERNAME }}
          MASON_PASSWORD: ${{ secrets.MASON_PASSWORD }}
      - name: Register Mason project
        run: ./mason register project
      - name: Deploy to development environment
        run: |
          ./mason deploy --push config officeos-g450 latest check-in-kiosk-g450-dev
          ./mason deploy --push config officeos-g430 latest check-in-kiosk-g430-dev
      - name: Deploy to production environment
        run: |
          if [ ! -z $(git tag -l --points-at HEAD) ]
          then
            ./mason deploy --push config officeos-g450 latest check-in-kiosk-g450
            ./mason deploy --push config officeos-g430 latest check-in-kiosk-g430
          fi

  deploy_web:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Cache Gradle
        uses: actions/cache@v1
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-v2-gradle-${{ hashFiles('**/*') }}
          restore-keys: |
            ${{ runner.os }}-v2-gradle-
      - name: Deploy website + backend
        run: ./gradlew deploy
